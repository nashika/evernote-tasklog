(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var Controller;

  Controller = (function() {
    function Controller($scope, viewUtil) {
      this.$scope = $scope;
      this.viewUtil = viewUtil;
    }

    return Controller;

  })();

  app.controller('Controller', ['$scope', 'viewUtil', Controller]);

  module.exports = Controller;

}).call(this);



},{}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var TimelineController;

  TimelineController = (function() {
    TimelineController.prototype.timeLogs = {};

    TimelineController.prototype.timelineDatas = [];

    function TimelineController($scope, $http) {
      var container, options, timeline;
      this.$scope = $scope;
      this.$http = $http;
      container = document.getElementById('timeline');
      this.timelineDatas = [
        {
          id: 1,
          content: 'item 1',
          start: '2013-04-20'
        }, {
          id: 2,
          content: 'item 2',
          start: '2013-04-14'
        }, {
          id: 3,
          content: 'item 3',
          start: '2013-04-18'
        }, {
          id: 4,
          content: 'item 4',
          start: '2013-04-16',
          end: '2013-04-19'
        }, {
          id: 5,
          content: 'item 5',
          start: '2013-04-25'
        }, {
          id: 6,
          content: 'item 6',
          start: '2013-04-27'
        }
      ];
      this.$http({
        method: 'GET',
        url: '/time-logs'
      }).success((function(_this) {
        return function(datas, status) {
          var _id, base, data, i, len, name, noteGuid, noteTimeLogs, ref, results, timeLog;
          for (i = 0, len = datas.length; i < len; i++) {
            timeLog = datas[i];
            if ((base = _this.timeLogs)[name = timeLog.noteGuid] == null) {
              base[name] = {};
            }
            _this.timeLogs[timeLog.noteGuid][timeLog._id] = timeLog;
          }
          data = [];
          ref = _this.timeLogs;
          results = [];
          for (noteGuid in ref) {
            noteTimeLogs = ref[noteGuid];
            results.push((function() {
              var results1;
              results1 = [];
              for (_id in noteTimeLogs) {
                timeLog = noteTimeLogs[_id];
                results1.push(data.push({
                  id: _id,
                  content: timeLog.comment,
                  start: timeLog.date
                }));
              }
              return results1;
            })());
          }
          return results;
        };
      })(this)).error((function(_this) {
        return function(data, status) {
          return console.error(status);
        };
      })(this));
      options = {};
      timeline = new vis.Timeline(container, this.timelineDatas, options);
    }

    return TimelineController;

  })();

  app.controller('TimelineController', ['$scope', '$http', TimelineController]);

  module.exports = TimelineController;

}).call(this);



},{}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  app.factory('viewUtil', function() {
    var viewUtil;
    viewUtil = {
      getDate: function(datetime) {
        var date;
        date = new Date(datetime);
        return date.getFullYear() + '/' + date.getMonth() + '/' + date.getDate();
      },
      getTime: function(datetime) {
        var date;
        date = new Date(datetime);
        return date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();
      }
    };
    return viewUtil;
  });

}).call(this);



},{}],4:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  app.filter('orderObjectBy', function() {
    return function(items, field, reverse) {
      var filtered, results;
      if (field == null) {
        field = '$value';
      }
      if (reverse == null) {
        reverse = true;
      }
      filtered = [];
      angular.forEach(items, function(item, key) {
        return filtered.push({
          key: key,
          item: item
        });
      });
      filtered.sort(function(a, b) {
        if (field === '$key') {
          if (a.key > b.key) {
            return -1;
          } else {
            return 1;
          }
        }
        if (field === '$value') {
          if (a.item > b.item) {
            return -1;
          } else {
            return 1;
          }
        }
        if (typeof field === 'string') {
          if (a[field] > b[field]) {
            return -1;
          } else {
            return 1;
          }
        }
        if (typeof field === 'function') {
          if (field(a.item, a.key) > field(b.item, b.key)) {
            return -1;
          } else {
            return 1;
          }
        }
      });
      if (reverse) {
        filtered.reverse();
      }
      results = [];
      angular.forEach(filtered, function(item) {
        var result;
        result = item.item;
        result['$key'] = item.key;
        return results.push(result);
      });
      return results;
    };
  });

}).call(this);



},{}],5:[function(require,module,exports){
window.app = angular.module('App', ['ui.bootstrap']);

require('./filters/order-object-by');

require('./factories/view-util');

require('./controllers/controller');

require('./controllers/timeline-controller');


},{"./controllers/controller":1,"./controllers/timeline-controller":2,"./factories/view-util":3,"./filters/order-object-by":4}]},{},[5])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
