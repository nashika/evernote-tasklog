// Generated by CoffeeScript 1.9.3
(function() {
  app.factory('viewUtil', function() {
    var viewUtil;
    viewUtil = {
      getDate: function(datetime) {
        var date;
        date = new Date(datetime);
        return date.getFullYear() + '/' + date.getMonth() + '/' + date.getDate();
      },
      getTime: function(datetime) {
        var date;
        date = new Date(datetime);
        return date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();
      },
      parseNoteContent: function(content) {
        var clearLine, i, len, line, logs, profits, ref, results;
        profits = [];
        logs = [];
        content = content.replace(/\r\n|\r|\n|<br\/>|<\/div>|<\/ul>|<\/li>/g, '<>');
        ref = content.split('<>');
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          line = ref[i];
          results.push(clearLine = line.replace(/<[^>]*>/g, ''));
        }
        return results;

        /*
            regExpProfit.Pattern = "[@��](\\|��)"
            regExpProfit.IgnoreCase = True
            regExpLog.Pattern = "[@��](\d{2,4}/\d{1,2}/\d{1,2})"
            regExpDate.Pattern = "\d{2,4}/\d{1,2}/\d{1,2}"
            regExpTime.Pattern = "\d{1,2}:\d{1,2}:\d{1,2}|\d{1,2}:\d{1,2}"
            regExpSpentTime.Pattern = "\d+h\d+m|\d+m|\d+h|\d+\.\d+h"
            regExpSpentTime.IgnoreCase = True
        
            For Each line In Split(content, "<>")
        
                '���v�������̉���
                Set lineMatchs = regExpProfit.Execute(clearLine)
                If lineMatchs.count > 0 Then
                    Set attributes = New Dictionary
                    Set lineMatch = lineMatchs.Item(0)
                    '�R�����g�̎擾
                    If lineMatch.FirstIndex > 0 Then
                        attributes.Add "comment", Trim(Left(clearLine, lineMatch.FirstIndex - 1))
                    Else
                        attributes.Add "comment", ""
                    End If
                    '���v�z�̎擾
                    profitText = Trim(Mid(clearLine, lineMatch.FirstIndex + lineMatch.Length + 1))
                    attributes.Add "profit", Val(profitText)
                    myProfits.Add attributes
                End If
        
                '���O�������̉���
                Set lineMatchs = regExpLog.Execute(clearLine)
                If lineMatchs.count > 0 Then
                    Set attributes = New Dictionary
                    Set lineMatch = lineMatchs.Item(0)
                    '�R�����g�̎擾
                    If lineMatch.FirstIndex > 0 Then
                        attributes.Add "comment", Trim(Left(clearLine, lineMatch.FirstIndex - 1))
                    Else
                        attributes.Add "comment", ""
                    End If
                    '�R�����g�ȊO�̃e�L�X�g�擾
                    attributesText = Trim(Mid(clearLine, lineMatch.FirstIndex + 1))
                    '���t�̎擾
                    Set logMatchs = regExpDate.Execute(attributesText)
                    If logMatchs.count > 0 Then
                        attributes.Add "date", logMatchs.Item(0)
                    End If
                    '�����̎擾
                    Set logMatchs = regExpTime.Execute(attributesText)
                    If logMatchs.count > 0 Then
                        attributes.Add "time", logMatchs.Item(0)
                    End If
                    '�S���҂̎擾
                    Dim alias As Dictionary
                    Dim p As Variant
                    For Each p In myPersonAliases
                        Set alias = p
                        If InStr(attributesText, alias.Item("aliasName")) Then
                            attributes.Add "personId", alias.Item("personId")
                            attributes.Add "personAbbrName", alias.Item("abbrName")
                            Exit For
                        End If
                    Next
                    '���Ǝ��Ԃ̎擾
                    Set logMatchs = regExpSpentTime.Execute(attributesText)
                    If logMatchs.count > 0 Then
                        Dim sSpentTime As String
                        Dim sSpentHour As String
                        Dim sSpentMinute As String
                        Dim nSpentMinute As Integer
                        sSpentTime = LCase(logMatchs.Item(0))
                        nSpentMinute = 0
                        If InStr(sSpentTime, "h") > 0 Then
                            sSpentHour = Left(sSpentTime, InStr(sSpentTime, "h") - 1)
                            nSpentMinute = nSpentMinute + Round(sSpentHour * 60)
                        End If
                        If InStr(sSpentTime, "m") > 0 Then
                            If InStr(sSpentTime, "h") > 0 Then
                                sSpentMinute = Mid(sSpentTime, InStr(sSpentTime, "h") + 1)
                                sSpentMinute = Left(sSpentMinute, Len(sSpentMinute) - 1)
                            Else
                                sSpentMinute = Left(sSpentTime, Len(sSpentTime) - 1)
                            End If
                            nSpentMinute = nSpentMinute + sSpentMinute
                        End If
                        sSpentTime = (nSpentMinute \ 60) & ":" & (nSpentMinute Mod 60)
                        attributes.Add "spentTime", sSpentTime
                    End If
                    '���t�ƒS���҂����݂����΃��O�ƌ��􂵂ăf�[�^�ێ�
                    If attributes.Exists("date") And attributes.Exists("personId") Then
                        myLogs.Add attributes
                    End If
                End If
            Next
        End Sub
         */
      }
    };
    return viewUtil;
  });

}).call(this);

//# sourceMappingURL=view-util.js.map
