// Generated by CoffeeScript 1.9.3
(function() {
  var TimelineController, async;

  async = require('async');

  TimelineController = (function() {
    function TimelineController($scope, $http) {
      var container, options;
      this.$scope = $scope;
      this.$http = $http;
      this.$scope.persons = {};
      this.$scope.notes = {};
      this.$scope.timeLogs = {};
      this.$scope.timelineItems = new vis.DataSet();
      this.$scope.timelineGroups = new vis.DataSet();
      container = document.getElementById('timeline');
      options = {};
      this.$scope.timeline = new vis.Timeline(container, this.$scope.timelineItems, this.$scope.timelineGroups, options);
      async.series([
        (function(_this) {
          return function(callback) {
            return _this.$http.get('/persons').success(function(data) {
              var i, len, person;
              for (i = 0, len = data.length; i < len; i++) {
                person = data[i];
                _this.$scope.persons[person] = person;
                _this.$scope.timelineGroups.add({
                  id: person,
                  content: person
                });
              }
              return callback();
            }).error(function(data) {
              return callback(data);
            });
          };
        })(this), (function(_this) {
          return function(callback) {
            return _this.$http.get('/notes').success(function(data) {
              var i, len, note;
              for (i = 0, len = data.length; i < len; i++) {
                note = data[i];
                _this.$scope.notes[note.guid] = note;
              }
              return callback();
            }).error(function(data) {
              return callback(data);
            });
          };
        })(this), (function(_this) {
          return function(callback) {
            return _this.$http({
              method: 'GET',
              url: '/time-logs'
            }).success(function(data) {
              var _id, base, end, i, len, name, noteGuid, noteTimeLogs, ref, start, timeLog;
              for (i = 0, len = data.length; i < len; i++) {
                timeLog = data[i];
                if ((base = _this.$scope.timeLogs)[name = timeLog.noteGuid] == null) {
                  base[name] = {};
                }
                _this.$scope.timeLogs[timeLog.noteGuid][timeLog._id] = timeLog;
              }
              ref = _this.$scope.timeLogs;
              for (noteGuid in ref) {
                noteTimeLogs = ref[noteGuid];
                for (_id in noteTimeLogs) {
                  timeLog = noteTimeLogs[_id];
                  start = new Date(timeLog.date);
                  if (timeLog.spentTime) {
                    end = new Date(start);
                    end.setMinutes(start.getMinutes() + timeLog.spentTime);
                  } else {
                    end = null;
                  }
                  _this.$scope.timelineItems.add({
                    id: _id,
                    group: timeLog.person,
                    content: _this.$scope.notes[timeLog.noteGuid].title + '<br>' + timeLog.comment,
                    start: start,
                    end: end
                  });
                }
              }
              return callback();
            }).error(function(data) {
              return callback(data);
            });
          };
        })(this)
      ], (function(_this) {
        return function(err) {
          if (err) {
            throw new Error(err);
          }
          return _this.$scope.timeline.fit();
        };
      })(this));
    }

    return TimelineController;

  })();

  app.controller('TimelineController', ['$scope', '$http', TimelineController]);

  module.exports = TimelineController;

}).call(this);

//# sourceMappingURL=timeline-controller.js.map
