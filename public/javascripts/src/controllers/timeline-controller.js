// Generated by CoffeeScript 1.9.3
(function() {
  var TimelineController;

  TimelineController = (function() {
    TimelineController.prototype.timeLogs = {};

    TimelineController.prototype.timelineDatas = [];

    function TimelineController($scope, $http) {
      var container, options, timeline;
      this.$scope = $scope;
      this.$http = $http;
      container = document.getElementById('timeline');
      this.timelineDatas = [
        {
          id: 1,
          content: 'item 1',
          start: '2013-04-20'
        }, {
          id: 2,
          content: 'item 2',
          start: '2013-04-14'
        }, {
          id: 3,
          content: 'item 3',
          start: '2013-04-18'
        }, {
          id: 4,
          content: 'item 4',
          start: '2013-04-16',
          end: '2013-04-19'
        }, {
          id: 5,
          content: 'item 5',
          start: '2013-04-25'
        }, {
          id: 6,
          content: 'item 6',
          start: '2013-04-27'
        }
      ];
      this.$http({
        method: 'GET',
        url: '/time-logs'
      }).success((function(_this) {
        return function(datas, status) {
          var _id, base, data, i, len, name, noteGuid, noteTimeLogs, ref, results, timeLog;
          for (i = 0, len = datas.length; i < len; i++) {
            timeLog = datas[i];
            if ((base = _this.timeLogs)[name = timeLog.noteGuid] == null) {
              base[name] = {};
            }
            _this.timeLogs[timeLog.noteGuid][timeLog._id] = timeLog;
          }
          data = [];
          ref = _this.timeLogs;
          results = [];
          for (noteGuid in ref) {
            noteTimeLogs = ref[noteGuid];
            results.push((function() {
              var results1;
              results1 = [];
              for (_id in noteTimeLogs) {
                timeLog = noteTimeLogs[_id];
                results1.push(data.push({
                  id: _id,
                  content: timeLog.comment,
                  start: timeLog.date
                }));
              }
              return results1;
            })());
          }
          return results;
        };
      })(this)).error((function(_this) {
        return function(data, status) {
          return console.error(status);
        };
      })(this));
      options = {};
      timeline = new vis.Timeline(container, this.timelineDatas, options);
    }

    return TimelineController;

  })();

  app.controller('TimelineController', ['$scope', '$http', TimelineController]);

  module.exports = TimelineController;

}).call(this);

//# sourceMappingURL=timeline-controller.js.map
