// Generated by CoffeeScript 1.10.0
(function() {
  var BrowserWindow, debug, e, electronApp, error1, expressApp, http, mainWindow, normalizePort, onError, onListening, port, server, www;

  try {
    electronApp = require('app');
    BrowserWindow = require('browser-window');
  } catch (error1) {
    e = error1;
    electronApp = null;
    BrowserWindow = null;
  }

  require('source-map-support').install();

  normalizePort = function(val) {
    var port;
    port = parseInt(val, 10);
    if (isNaN(port)) {
      return val;
    }
    if (port >= 0) {
      return port;
    }
    return false;
  };

  onError = function(error) {
    var bind;
    if (error.syscall !== 'listen') {
      throw error;
    }
    bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    switch (error.code) {
      case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        return process.exit(1);
      case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        return process.exit(1);
      default:
        throw error;
    }
  };

  onListening = function() {
    var addr, bind;
    addr = server.address();
    bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    return debug('Listening on ' + bind);
  };

  expressApp = require('../app');

  debug = require('debug')('evernote-tasklog:server');

  http = require('http');

  port = normalizePort(process.env.PORT || '3000');

  expressApp.set('port', port);

  server = http.createServer(expressApp);

  server.listen(port);

  server.on('error', onError);

  server.on('listening', onListening);

  www = require('./www');

  www.main(expressApp, server);

  if (electronApp) {
    require('crash-reporter').start();
    mainWindow = null;
    electronApp.on('window-all-closed', function() {
      if (process.platform !== 'darwin') {
        return electronApp.quit();
      }
    });
    electronApp.on('ready', function() {
      mainWindow = new BrowserWindow({
        width: 800,
        height: 600
      });
      mainWindow.loadUrl("http://localhost:" + port);
      return mainWindow.on('closed', function() {
        return mainWindow = null;
      });
    });
  }

}).call(this);

//# sourceMappingURL=main.js.map
